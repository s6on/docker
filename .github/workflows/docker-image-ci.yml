name: Docker Image CI

on:
  schedule:
    - cron: '4 20 * * 4'
  push:
    branches: [ main ]

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    steps:
      - name: Get missing tags
        id: tags
        uses: s6on/mirror-docker-tags-action@v1.1
        with:
          from: alpine[latest,3],debian[latest,11,11-slim,10,10-slim,9,9-slim],ubuntu[latest,20.04,18.04]
          to: ${{ github.repository_owner }}
          extra-registry: ghcr.io
          allowed-platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          updateAll: ${{ github.event_name != 'schedule' }}
    outputs:
      matrix: ${{ steps.tags.outputs.matrix }}
  build-push:
    runs-on: ubuntu-latest
    needs: setup-matrix
    if: ${{ needs.setup-matrix.outputs.matrix }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    name: ${{ matrix.base_img }}
    steps:
      - name: Log into DockerHub
        uses: docker/login-action@v1
        continue-on-error: false
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v1
        continue-on-error: false
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ matrix.tags }}
          platforms: ${{ matrix.platforms }}
          build-args: BASE=${{ matrix.base_img }}
